자바-오라클 DB연동 (DAO, DTO)

DTO
　- Java의 객체와 Oracle의 DB를 연결시키는 것
　- 데이터를 전송하는 객체, Java에서는 클래스같은 개념
　- 객체와 튜플의 연관성
　- 객체 하나당 튜플 하나를 연결한다.

JVM → Oracle (INSERT DELETE SELECT UPDATE)
Oracle → JVM (결과값)

라이브러리
　- 우리가 기능을 사용하기 위해 제작된 소스파일 묶음, JAR파일

Oracle에서 배포하는 라이브러리(소스파일 묶음) : ojdbc6.jar

`
예제
오라클에서 배포한 라이브러리 ojdbc6.jar를 아무대나 막 저장할 수 없으니, 적당한 위치라고 생각하는 워크스페이스를 지정한 뒤 저장한다. (여기선 현재 공부하고 있는 워크스페이스 내 common 폴더를 만들어서 사용하였다.)
1. 프로젝트에 라이브러리 빌드
　- 빌드는 생성하여 준비한다는 의미, 라이브러리 JAR파일을 JVM에서 인식할 수 있도록 하는 과정
　- 이클립스 기준으로 자바 프로젝트 폴더를 우클릭 한 뒤 build path → configure build path → ojdbc6.jar 파일을 빌드하였다.
2. 라이브러리로부터 필요한 드라이버를 로드한다.
　- 드라이버 로드는 한번만 로드하면 된다.
　- 현실적으로 디자인하기 위해서 클래스의 구조를 변경하였다.
`

JVM에서 커넥션을 제공한다.
커넥션은 Oracle(DB)이 가지고 있는 자원이다.
커넥션을 독점하면 다른 사람이 이용을 못하기 때문에 사용 후 반납해줘야한다.

