클래스 설계 : DTO, DAO
디자인 설계 : 싱글톤(Static, Final)

운영체제 (CPU RAM HDD Keyboard Lan 등)
	중앙처리장치 : CPU
	주기억장치 : RAM
	보조기억장치 : HDD
	입/출력장치 : Keyboard
	통신장치(이더넷) : Lan
컴퓨터를 구성하는 하드웨어 자원을 관리하는 역할

JVM에서 독자적으로 해결하지 못하는 기능은 외부자원에서 가져와서 사용해야한다.
사용 후에는 반납을 해줘야한다. (=close() 메서드)
　- Connection : Oracle	데이터베이스에 접근하기 위한 자원
　- Scanner = Keyboard

Connection Pool : DBCP : Database Connection Pool
　- 사용자가 많은 프로그램에서 사용량이 많을 경우 자원 누수 방지를 위한 것
　- 커넥션을 미리 만들어두는 형태로, 자원을 무한대로 만들지 않도록 설정하는 것

클래스 설계
　- 기본 : Main (시작)
　- Service : 등록 삭제 수정 전체보기 등의 기능
	> 사용자(고객)가 기능을 이용할 때 서비스를 제공
　- DTO : Data Transfer Object : 무언가 하나에 대한 정보, Getter/Setter
　- DAO : Data Access Object : 고객이 서비스를 요청하면 기능을 수행하고 DB에 처리
	싱글톤 : 객체를 외부에서 만들지 못하게 막는 것
		외부에서 new연산자를 사용하여 무분별하게 객체를 만들지 못하게 막는다.
		내부에서 객체를 설정하고 외부에서 이용할 땐 주소만 넘겨주는 방식
→ 객체를 여러번 만들면 힙(Heap) 메모리에 불필요한 할당이 일어날 수 있다.

접근제어자 private 설정
　- 은닉화 : 외부에서 자원을 무분별하게 사용하는 것을 막기 위해서

