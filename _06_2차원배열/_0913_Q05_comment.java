package _06_2차원배열;

public class _0913_Q05_comment {

	public static void main(String[] args) {
		int[][] a = new int[4][5];
		int num = 1;
		
		/* 다음 형태로 출력하기
		 * 1   2   3   4   5
		 * 14  15  16  17  6
		 * 13  20  19  18  7
		 * 12  11  10  9   8
		 */
		
		// 값을 저장하는 코드
		/* 문제 분석
		 *  [1회 시도]						[2회 시도]
		 *  0,0  0,1  0,2  0,3  0,4			1,1  1,2  1,3
		 *  1,4  2,4  3,4					2,3
		 *  3,3  3,2  3,1  3,0				2,2  2,1
		 *  2,0  1,0				
		 *  1회 시도에서..
		 *   - 1번 : 행은 고정, 열은 0 1 2 3 4
		 *   - 2번 : 열은 고정, 행은 1 2 3
		 *   - 3번 : 행은 고정, 열은 3 2 1 0
		 *   - 4번 : 열은 고정, 행은 2 1
		 *  2회 시도에서..
		 *   - 1번 : 행은 고정, 열은 1 2 3
		 *   - 2번 : 열은 고정, 행은 3
		 *   - 3번 : 행은 고정, 열은 2 1
		 * 제일 바깥의 사각형을 한바퀴 도는 패턴을 확인할 수 있다. (가로-세로-가로-세로 : 한바퀴)
		 * 해당 패턴의 코드를 안쪽 사각형을 돌 때도 사용할 수 있도록 할 수 있다.
		 * 1회, 2회 시도의 1번 형태를 보면 행은 고정되고 열은 (1회)0 1 2 3 4 / (2회)1 2 3 형태로 순차적으로 증가한다.
		 * 하지만 각 시도에 따라 행과 열의 숫자가 달라지는 것을 확인할 수 있다.
		 * 위를 생각하며 각 시도의 2번,3번,4번도 같은 형태로 진행되는 것을 알 수 있는데.. 
		 * 반복되는 패턴 내에 달라지는 값을 저장하고 싶다면 변수를 선언하여 행과 열의 번호를 저장하여 사용하면 된다는 것을 알 수 있다.
		 */
		// 변수 4개 선언
		int rowMin = 0;		// 행 최소값
		int rowMax = 3;		// 행 최대값
		int colMin = 0;		// 열 최소값
		int colMax = 4;		// 열 최대값
		
		while (true) {				// n회 시도, 반복
			if (num > 20) break;	// 행*열의 번호를 다 채웠을 때, 반복문을 종료하도록 한다.
			for (int i=colMin; i<=colMax; i++) {	// 1번
				a[rowMin][i] = num++;
			}
			rowMin++;
			for (int i=rowMin; i<=rowMax; i++) {	// 2번
				a[i][colMax] = num++;
			}
			colMax--;
			for (int i=colMax; i>=colMin; i--) {	// 3번
				a[rowMax][i] = num++;
			}
			rowMax--;
			for (int i=rowMax; i>=rowMin; i--) {	// 4번
				a[i][colMin] = num++;
			}
			colMin++;
		}
		
		// 출력을 위한 코드
		for (int i=0; i<4; i++) {
			for (int j=0; j<5; j++) {
				System.out.print(a[i][j] + " ");
			}
			System.out.println();
		}
	}
}
